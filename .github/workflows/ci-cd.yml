name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    permissions:
      checks: write
    steps:
      - name: Setup repo
        uses: actions/checkout@v4
      - name: Install modules
        run: npm ci
      - name: Run tests
        run: npm run test
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: "**/junit.xml"

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    steps:
      - name: Setup repo
        uses: actions/checkout@v4
      - name: Install modules
        run: npm ci
      - name: Run linter
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
    permissions:
      packages: write
    env:
      REGISTRY_URL: ghcr.io
      REGISTRY_USERNAME: ${{ github.actor }}
      REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      IMAGE: ${{ github.repository }}
    defaults:
      run:
        working-directory: ./app
    steps:
      - name: Setup repo
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
      - name: Build Docker image
        run: docker build . --file Dockerfile --tag ${{ env.REGISTRY_URL }}/${{ env.IMAGE }}:latest
      - name: Push to registry
        run: docker push ${{ env.REGISTRY_URL }}/${{ env.IMAGE }}:latest
